apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion rootProject.ext.sdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.ext.sdkVersion

        ndk {
            moduleName "cardioRecognizer"
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

        consumerProguardFiles 'proguard.cfg'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    resourcePrefix 'cio_'

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
}

dependencies {
    testImplementation "junit:junit:4.12"
    testImplementation "org.robolectric:robolectric:3.1.2"
}

task ndkClean(type: Delete) {
    // remove unused archs from build cache
    delete fileTree('.externalNativeBuild') {
        exclude android.defaultConfig.ndk.abiFilters.collect { '/**' + it }
    }
}
tasks.findByPath(':clean').dependsOn ndkClean

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false

    options.docTitle("<h1>card.io Android SDK</h1>")
    options.bottom("<i>Copyright &#169; 2012 PayPal, Inc. All Rights Reserved.</i>")
    options.windowTitle("card.io Android SDK")
    options.author(true)
    options.version(true)
    options.use(true)
    options.setMemberLevel(JavadocMemberLevel.PUBLIC)

    // enables links to Java 7 docs
    options.links("http://docs.oracle.com/javase/7/docs/api/")
    // enables links to Android docs.
    options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocsJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}


def sonatypeUsername = System.env['SONATYPE_USERNAME']
def sonatypePassword = System.env['SONATYPE_PASSWORD']

nexusStaging {
    packageGroup = "io.card"
}

uploadArchives {
    doFirst {
        assert sonatypeUsername != null && sonatypePassword != null : "Specify SONATYPE_USERNAME and SONATYPE_PASSWORD as environment variables"
    }

    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.setArtifactId 'android-sdk'

            pom.project {
                name 'android-sdk'
                groupId = 'io.card'
                version = "${android.defaultConfig.versionName}"
                packaging 'aar'
                description 'This is card.io\'s SDK for Android.'
                url 'https://github.com/card-io/card.io-Android-source'

                scm {
                    url 'scm:git@github.com:card-io/card.io-Android-source.git'
                    connection 'scm:git@github.com:card-io/card.io-Android-source.git'
                    developerConnection 'scm:git@github.com:card-io/card.io-Android-source.git'
                }

                developers {
                    developers {
                        developer {
                            id 'devs'
                            name 'Braintree Payments'
                        }
                    }
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
