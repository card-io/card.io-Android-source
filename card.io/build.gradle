apply plugin: 'com.android.library'
//apply plugin: 'maven'
//apply plugin: 'signing'
//apply plugin: 'io.codearte.nexus-staging'

def LIB_VERSION = "5.5.2"

repositories {
    mavenCentral()
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'card.io'

    publishedGroupId = 'com.rmt.android'
    libraryName = 'card.io'
    artifact = 'card.io'

    libraryDescription = 'Fork of card.io Android SDK.'

    siteUrl = 'https://github.com/rexmtorres/card.io-Android-source'
    gitUrl = 'https://github.com/rexmtorres/card.io-Android-source.git'

    libraryVersion = LIB_VERSION

    developerId = 'rainai'
    developerName = 'Rex M. Torre'
    developerEmail = 'rexmtorres@gmail.com'

    licenseName = 'MIT'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

android {
    compileSdkVersion rootProject.ext.sdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.ext.sdkVersion
        versionName LIB_VERSION

        ndk {
            moduleName "cardioRecognizer"
        }

        consumerProguardFiles 'proguard.cfg'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    resourcePrefix 'cio_'

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
}

dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.robolectric:robolectric:3.1.2"
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'

// [START] apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        failOnError false

        options.docTitle("<h1>card.io Android SDK</h1>")
        options.bottom("<i>Copyright &#169; 2012 PayPal, Inc. All Rights Reserved.</i>")
        options.windowTitle("card.io Android SDK")
        options.author(true)
        options.version(true)
        options.use(true)
        options.setMemberLevel(JavadocMemberLevel.PUBLIC)
        options.encoding = 'UTF-8'

        // enables links to Java 7 docs
        options.links("http://docs.oracle.com/javase/7/docs/api/")
        // enables links to Android docs.
        options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
// [END] apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
